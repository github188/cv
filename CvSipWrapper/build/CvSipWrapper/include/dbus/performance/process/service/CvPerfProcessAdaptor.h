/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c CvPerfProcessAdaptor -a CvPerfProcessAdaptor.h:CvPerfProcessAdaptor.cpp .\com.dcampus.coolview.performance.process.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef CVPERFPROCESSADAPTOR_H_1299737942
#define CVPERFPROCESSADAPTOR_H_1299737942

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface com.dcampus.coolview.performance.process
 */
class CvPerfProcessAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.dcampus.coolview.performance.process")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.dcampus.coolview.performance.process\">&#xd;\n"
"	//recover specific process&#xd;\n"
"	<method name=\"Recover\">\n"
"      <arg direction=\"in\" type=\"ay\" name=\"processImage\"/>	//binary image&#xd;\n"
"	</method>&#xd;\n"
"	//Exit Process&#xd;\n"
"	<method name=\"ExitProcess\"/>\n"
"  </interface>\n"
        "")
public:
    CvPerfProcessAdaptor(QObject *parent);
    virtual ~CvPerfProcessAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void ExitProcess();
    void Recover(const QByteArray &processImage);
Q_SIGNALS: // SIGNALS
};

#endif
