# CMAKE generated file: DO NOT EDIT!
# Generated by "NMake Makefiles" Generator, CMake Version 2.6

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canoncical targets will work.
.SUFFIXES:

.SUFFIXES: .hpux_make_needs_suffix_list

# Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE
NULL=nul
!ENDIF
SHELL = cmd.exe

# The CMake executable.
CMAKE_COMMAND = D:\CMake2.6\bin\cmake.exe

# The command to remove a file.
RM = D:\CMake2.6\bin\cmake.exe -E remove -f

# The program to use to edit the cache.
CMAKE_EDIT_COMMAND = D:\CMake2.6\bin\CMakeSetup.exe

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = D:\qutecom-2.2

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = D:\qutecom-2.2\build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	D:\CMake2.6\bin\CMakeSetup.exe -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
	cd D:\qutecom-2.2\build
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache\fast: edit_cache
.PHONY : edit_cache\fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	D:\CMake2.6\bin\cmake.exe -P cmake_install.cmake
	cd D:\qutecom-2.2\build
.PHONY : install

# Special rule for the target install
install\fast: preinstall\fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	D:\CMake2.6\bin\cmake.exe -P cmake_install.cmake
	cd D:\qutecom-2.2\build
.PHONY : install\fast

# Special rule for the target install/local
install\local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	D:\CMake2.6\bin\cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
	cd D:\qutecom-2.2\build
.PHONY : install\local

# Special rule for the target install/local
install\local\fast: install\local
.PHONY : install\local\fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	cd D:\qutecom-2.2\build
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components\fast: list_install_components
.PHONY : list_install_components\fast

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool..."
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	D:\CMake2.6\bin\cpack.exe --config D:/qutecom-2.2/build/CPackConfig.cmake
	cd D:\qutecom-2.2\build
.PHONY : package

# Special rule for the target package
package\fast: package
.PHONY : package\fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool for source..."
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	D:\CMake2.6\bin\cpack.exe --config D:/qutecom-2.2/build/CPackSourceConfig.cmake
	cd D:\qutecom-2.2\build
.PHONY : package_source

# Special rule for the target package_source
package_source\fast: package_source
.PHONY : package_source\fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	D:\CMake2.6\bin\cmake.exe -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
	cd D:\qutecom-2.2\build
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache\fast: rebuild_cache
.PHONY : rebuild_cache\fast

# The main all target
all: cmake_check_build_system
	cd D:\qutecom-2.2\build
	$(CMAKE_COMMAND) -E cmake_progress_start D:\qutecom-2.2\build\CMakeFiles D:\qutecom-2.2\build\libs\3rdparty\tinyxml\CMakeFiles\progress.make
	$(MAKE) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\all
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
	$(CMAKE_COMMAND) -E cmake_progress_start D:\qutecom-2.2\build\CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd D:\qutecom-2.2\build
	$(MAKE) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\clean
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : clean

# The main clean target
clean\fast: clean
.PHONY : clean\fast

# Prepare targets for installation.
preinstall: all
	cd D:\qutecom-2.2\build
	$(MAKE) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\preinstall
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : preinstall

# Prepare targets for installation.
preinstall\fast:
	cd D:\qutecom-2.2\build
	$(MAKE) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\preinstall
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : preinstall\fast

# clear depends
depend:
	cd D:\qutecom-2.2\build
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : depend

# Convenience name for target.
libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\rule:
	cd D:\qutecom-2.2\build
	$(MAKE) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\rule
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\rule

# Convenience name for target.
tinyxml: libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\rule
.PHONY : tinyxml

# fast build rule for target.
tinyxml\fast:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxml\fast

# target to build an object file
tinyxml.obj:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxml.obj
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxml.obj

# target to preprocess a source file
tinyxml.i:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxml.i
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxml.i

# target to generate assembly for a file
tinyxml.s:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxml.s
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxml.s

# target to build an object file
tinyxmlerror.obj:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxmlerror.obj
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxmlerror.obj

# target to preprocess a source file
tinyxmlerror.i:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxmlerror.i
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxmlerror.i

# target to generate assembly for a file
tinyxmlerror.s:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxmlerror.s
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxmlerror.s

# target to build an object file
tinyxmlparser.obj:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxmlparser.obj
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxmlparser.obj

# target to preprocess a source file
tinyxmlparser.i:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxmlparser.i
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxmlparser.i

# target to generate assembly for a file
tinyxmlparser.s:
	cd D:\qutecom-2.2\build
	$(MAKE) -f libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\build.make /nologo -$(MAKEFLAGS) libs\3rdparty\tinyxml\CMakeFiles\tinyxml.dir\tinyxmlparser.s
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : tinyxmlparser.s

# Help Target
help:
	@echo The following are some of the valid targets for this Makefile:
	@echo ... all (the default if no target is provided)
	@echo ... clean
	@echo ... depend
	@echo ... edit_cache
	@echo ... install
	@echo ... install/local
	@echo ... list_install_components
	@echo ... package
	@echo ... package_source
	@echo ... rebuild_cache
	@echo ... tinyxml
	@echo ... tinyxml.obj
	@echo ... tinyxml.i
	@echo ... tinyxml.s
	@echo ... tinyxmlerror.obj
	@echo ... tinyxmlerror.i
	@echo ... tinyxmlerror.s
	@echo ... tinyxmlparser.obj
	@echo ... tinyxmlparser.i
	@echo ... tinyxmlparser.s
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd D:\qutecom-2.2\build
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
	cd D:\qutecom-2.2\build\libs\3rdparty\tinyxml
.PHONY : cmake_check_build_system

