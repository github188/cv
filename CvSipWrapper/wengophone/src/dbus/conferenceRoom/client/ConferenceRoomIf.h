/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c ConferenceRoomIf -p ConferenceRoomIf.h:ConferenceRoomIf.cpp .\com.coolview.ui.conferenceroom.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef CONFERENCEROOMIF_H_1287640145
#define CONFERENCEROOMIF_H_1287640145

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.coolview.ui.conferenceroom
 */
class ConferenceRoomIf: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.coolview.ui.conferenceroom"; }

public:
    ConferenceRoomIf(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~ConferenceRoomIf();

public Q_SLOTS: // METHODS
    inline QDBusReply<void> AddMediaWindow(bool send, const QByteArray &input_garray, int seet)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(send) << qVariantFromValue(input_garray) << qVariantFromValue(seet);
        return callWithArgumentList( QDBus::NoBlock, QLatin1String("AddMediaWindow"), argumentList);
    }

    inline QDBusReply<void> ChangeLayout(int displayModel)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(displayModel);
        return callWithArgumentList( QDBus::NoBlock, QLatin1String("ChangeLayout"), argumentList);
    }

    inline QDBusReply<void> CloseMediaWindow(const QString &user_id)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(user_id);
        return callWithArgumentList( QDBus::NoBlock, QLatin1String("CloseMediaWindow"), argumentList);
    }

    inline QDBusReply<void> CloseWindow()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList( QDBus::NoBlock, QLatin1String("CloseWindow"), argumentList);
    }

    inline QDBusReply<void> FullScreenShow(const QString &user_id)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(user_id);
        return callWithArgumentList( QDBus::NoBlock, QLatin1String("FullScreenShow"), argumentList);
    }

    inline QDBusReply<void> HandleUser(const QByteArray &input_garray)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(input_garray);
        return callWithArgumentList( QDBus::NoBlock, QLatin1String("HandleUser"), argumentList);
    }

    inline QDBusReply<void> ShowRtcpMsg(bool show)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(show);
        return callWithArgumentList( QDBus::NoBlock, QLatin1String("ShowRtcpMsg"), argumentList);
    }

    inline QDBusReply<void> UpdateRtcpMsg(const QByteArray &input_garray)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(input_garray);
        return callWithArgumentList( QDBus::NoBlock, QLatin1String("UpdateRtcpMsg"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace coolview {
    namespace ui {
      typedef ::ConferenceRoomIf conferenceroom;
    }
  }
}
#endif
