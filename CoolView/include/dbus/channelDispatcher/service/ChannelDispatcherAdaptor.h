/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c ChannelDispatcherAdaptor -a ChannelDispatcherAdaptor.h:ChannelDispatcherAdaptor.cpp .\com.dcampus.coolview.channelDispatcher.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef CHANNELDISPATCHERADAPTOR_H_1397028795
#define CHANNELDISPATCHERADAPTOR_H_1397028795

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.dcampus.coolview.channelDispatcher
 */
class ChannelDispatcherAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.dcampus.coolview.channelDispatcher")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.dcampus.coolview.channelDispatcher\">\n"
"    <method name=\"CreateChannel\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"channel_id\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"channel_type\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"input_garray\"/>\n"
"    </method>\n"
"    <method name=\"ReleaseChannel\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"channel_id\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"channel_type\"/>\n"
"    </method>\n"
"    <method name=\"ModifyChannel\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"channel_id\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"channel_type\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"modify_type\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"input_garray\"/>\n"
"    </method>\n"
"    <method name=\"Destroy\"/>\n"
"    <method name=\"ChannelStateChanged\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"channel_id\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"user_id\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"channel_type\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"channel_state\"/>\n"
"    </method>\n"
"    <signal name=\"NofityChannelStateChanged\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"channel_id\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"user_id\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"channel_type\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"channel_state\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    ChannelDispatcherAdaptor(QObject *parent);
    virtual ~ChannelDispatcherAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void ChannelStateChanged(const QString &channel_id, const QString &user_id, const QString &channel_type, int channel_state);
    void CreateChannel(const QString &channel_id, const QString &channel_type, const QByteArray &input_garray);
    void Destroy();
    void ModifyChannel(const QString &channel_id, const QString &channel_type, int modify_type, const QByteArray &input_garray);
    void ReleaseChannel(const QString &channel_id, const QString &channel_type);
Q_SIGNALS: // SIGNALS
    void NofityChannelStateChanged(const QString &channel_id, const QString &user_id, const QString &channel_type, int channel_state);
};

#endif
