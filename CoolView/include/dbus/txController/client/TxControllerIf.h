/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -v -c TxControllerIf -p TxControllerIf.h:TxControllerIf.cpp .\com.dcampus.coolview.txController.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef TXCONTROLLERIF_H_1431311811
#define TXCONTROLLERIF_H_1431311811

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.dcampus.coolview.txController
 */
class TxControllerIf: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.dcampus.coolview.txController"; }

public:
    TxControllerIf(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~TxControllerIf();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<int> ControlRecord(int op, const QByteArray &param)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(op) << QVariant::fromValue(param);
        return asyncCallWithArgumentList(QLatin1String("ControlRecord"), argumentList);
    }

    inline QDBusPendingReply<QByteArray> GetRecordStatus(const QString &focus, const QString &uri)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(focus) << QVariant::fromValue(uri);
        return asyncCallWithArgumentList(QLatin1String("GetRecordStatus"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace dcampus {
    namespace coolview {
      typedef ::TxControllerIf txController;
    }
  }
}
#endif
