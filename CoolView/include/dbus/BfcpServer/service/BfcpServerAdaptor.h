/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c BfcpServerAdaptor -a BfcpServerAdaptor.h:BfcpServerAdaptor.cpp .\com.dcampus.coolview.BfcpServer.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef BFCPSERVERADAPTOR_H_1427875938
#define BFCPSERVERADAPTOR_H_1427875938

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.dcampus.coolview.BfcpServer
 */
class BfcpServerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.dcampus.coolview.BfcpServer")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.dcampus.coolview.BfcpServer\">\n"
"    <signal name=\"ServerControlSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"control_error\"/>\n"
"    </signal>\n"
"    <signal name=\"ConferenceControlSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"control_error\"/>\n"
"      <arg direction=\"out\" type=\"u\" name=\"conference_id\"/>\n"
"    </signal>\n"
"    <signal name=\"FloorControlSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"control_error\"/>\n"
"      <arg direction=\"out\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"out\" type=\"q\" name=\"floor_id\"/>\n"
"    </signal>\n"
"    <signal name=\"UserControlSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"control_error\"/>\n"
"      <arg direction=\"out\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"out\" type=\"q\" name=\"user_id\"/>\n"
"    </signal>\n"
"    <signal name=\"ChairControlSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"control_error\"/>\n"
"      <arg direction=\"out\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"out\" type=\"q\" name=\"floor_id\"/>\n"
"      <arg direction=\"out\" type=\"q\" name=\"user_id\"/>\n"
"    </signal>\n"
"    <signal name=\"ConferenceIDsSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"control_error\"/>\n"
"      <arg direction=\"out\" type=\"ay\" name=\"conference_ids\"/>\n"
"    </signal>\n"
"    <signal name=\"ConferenceInfoSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"control_error\"/>\n"
"      <arg direction=\"out\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"conference_info\"/>\n"
"    </signal>\n"
"    <method name=\"Start\">\n"
"      <arg direction=\"in\" type=\"ay\" name=\"server_arg\"/>\n"
"    </method>\n"
"    <method name=\"Stop\"/>\n"
"    <method name=\"Quit\"/>\n"
"    <method name=\"AddConference\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"conference_arg\"/>\n"
"    </method>\n"
"    <method name=\"RemoveConference\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"    </method>\n"
"    <method name=\"ModifyConference\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"conference_arg\"/>\n"
"    </method>\n"
"    <method name=\"AddFloor\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"floor_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"floor_arg\"/>\n"
"    </method>\n"
"    <method name=\"RemoveFloor\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"floor_id\"/>\n"
"    </method>\n"
"    <method name=\"ModifyFloor\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"floor_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"floor_arg\"/>\n"
"    </method>\n"
"    <method name=\"AddUser\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"user_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"user_arg\"/>\n"
"    </method>\n"
"    <method name=\"RemoveUser\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"user_id\"/>\n"
"    </method>\n"
"    <method name=\"SetChair\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"floor_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"user_id\"/>\n"
"    </method>\n"
"    <method name=\"RemoveChair\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"floor_id\"/>\n"
"    </method>\n"
"    <method name=\"GetConferenceIDs\"/>\n"
"    <method name=\"GetConferenceInfo\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"conference_id\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    BfcpServerAdaptor(QObject *parent);
    virtual ~BfcpServerAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void AddConference(uint conference_id, const QByteArray &conference_arg);
    void AddFloor(uint conference_id, ushort floor_id, const QByteArray &floor_arg);
    void AddUser(uint conference_id, ushort user_id, const QByteArray &user_arg);
    void GetConferenceIDs();
    void GetConferenceInfo(uint conference_id);
    void ModifyConference(uint conference_id, const QByteArray &conference_arg);
    void ModifyFloor(uint conference_id, ushort floor_id, const QByteArray &floor_arg);
    void Quit();
    void RemoveChair(uint conference_id, ushort floor_id);
    void RemoveConference(uint conference_id);
    void RemoveFloor(uint conference_id, ushort floor_id);
    void RemoveUser(uint conference_id, ushort user_id);
    void SetChair(uint conference_id, ushort floor_id, ushort user_id);
    void Start(const QByteArray &server_arg);
    void Stop();
Q_SIGNALS: // SIGNALS
    void ChairControlSignal(int control_error, uint conference_id, ushort floor_id, ushort user_id);
    void ConferenceControlSignal(int control_error, uint conference_id);
    void ConferenceIDsSignal(int control_error, const QByteArray &conference_ids);
    void ConferenceInfoSignal(int control_error, uint conference_id, const QString &conference_info);
    void FloorControlSignal(int control_error, uint conference_id, ushort floor_id);
    void ServerControlSignal(int control_error);
    void UserControlSignal(int control_error, uint conference_id, ushort user_id);
};

#endif
