/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c BfcpClientAdaptor -a BfcpClientAdaptor.h:BfcpClientAdaptor.cpp .\com.dcampus.coolview.BfcpClient.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "BfcpClientAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class BfcpClientAdaptor
 */

BfcpClientAdaptor::BfcpClientAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

BfcpClientAdaptor::~BfcpClientAdaptor()
{
    // destructor
}

void BfcpClientAdaptor::CreateClient(const QByteArray &client_arg)
{
    // handle method call com.dcampus.coolview.BfcpClient.CreateClient
    QMetaObject::invokeMethod(parent(), "CreateClient", Q_ARG(QByteArray, client_arg));
}

void BfcpClientAdaptor::DestroyClient(int client_id)
{
    // handle method call com.dcampus.coolview.BfcpClient.DestroyClient
    QMetaObject::invokeMethod(parent(), "DestroyClient", Q_ARG(int, client_id));
}

void BfcpClientAdaptor::SendChairAction(int client_id, const QByteArray &chair_action_arg)
{
    // handle method call com.dcampus.coolview.BfcpClient.SendChairAction
    QMetaObject::invokeMethod(parent(), "SendChairAction", Q_ARG(int, client_id), Q_ARG(QByteArray, chair_action_arg));
}

void BfcpClientAdaptor::SendFloorQuery(int client_id, const QByteArray &floor_ids)
{
    // handle method call com.dcampus.coolview.BfcpClient.SendFloorQuery
    QMetaObject::invokeMethod(parent(), "SendFloorQuery", Q_ARG(int, client_id), Q_ARG(QByteArray, floor_ids));
}

void BfcpClientAdaptor::SendFloorRelease(int client_id, ushort floor_request_id)
{
    // handle method call com.dcampus.coolview.BfcpClient.SendFloorRelease
    QMetaObject::invokeMethod(parent(), "SendFloorRelease", Q_ARG(int, client_id), Q_ARG(ushort, floor_request_id));
}

void BfcpClientAdaptor::SendFloorRequest(int client_id, const QByteArray &floor_request_arg)
{
    // handle method call com.dcampus.coolview.BfcpClient.SendFloorRequest
    QMetaObject::invokeMethod(parent(), "SendFloorRequest", Q_ARG(int, client_id), Q_ARG(QByteArray, floor_request_arg));
}

void BfcpClientAdaptor::SendFloorRequestQuery(int client_id, ushort floor_request_id)
{
    // handle method call com.dcampus.coolview.BfcpClient.SendFloorRequestQuery
    QMetaObject::invokeMethod(parent(), "SendFloorRequestQuery", Q_ARG(int, client_id), Q_ARG(ushort, floor_request_id));
}

void BfcpClientAdaptor::SendGoodBye(int client_id)
{
    // handle method call com.dcampus.coolview.BfcpClient.SendGoodBye
    QMetaObject::invokeMethod(parent(), "SendGoodBye", Q_ARG(int, client_id));
}

void BfcpClientAdaptor::SendHello(int client_id)
{
    // handle method call com.dcampus.coolview.BfcpClient.SendHello
    QMetaObject::invokeMethod(parent(), "SendHello", Q_ARG(int, client_id));
}

void BfcpClientAdaptor::SendUserQuery(int client_id, const QByteArray &user_query_arg)
{
    // handle method call com.dcampus.coolview.BfcpClient.SendUserQuery
    QMetaObject::invokeMethod(parent(), "SendUserQuery", Q_ARG(int, client_id), Q_ARG(QByteArray, user_query_arg));
}

