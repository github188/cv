/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c BfcpClientAdaptor -a BfcpClientAdaptor.h:BfcpClientAdaptor.cpp .\com.dcampus.coolview.BfcpClient.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef BFCPCLIENTADAPTOR_H_1427284496
#define BFCPCLIENTADAPTOR_H_1427284496

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.dcampus.coolview.BfcpClient
 */
class BfcpClientAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.dcampus.coolview.BfcpClient")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.dcampus.coolview.BfcpClient\">\n"
"    <signal name=\"ClientControlSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"control_error\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"out\" type=\"ay\" name=\"client_arg\"/>\n"
"    </signal>\n"
"    <signal name=\"StateChangedSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"state\"/>\n"
"    </signal>\n"
"    <signal name=\"FloorRequestInfoReceivedSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"out\" type=\"ay\" name=\"data\"/>\n"
"    </signal>\n"
"    <signal name=\"UserStatusReceivedSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"out\" type=\"ay\" name=\"data\"/>\n"
"    </signal>\n"
"    <signal name=\"FloorStatusReceivedSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"out\" type=\"ay\" name=\"data\"/>\n"
"    </signal>\n"
"    <signal name=\"ErrorReceivedSignal\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"out\" type=\"ay\" name=\"data\"/>\n"
"    </signal>\n"
"    <method name=\"CreateClient\">\n"
"      <arg direction=\"in\" type=\"ay\" name=\"client_arg\"/>\n"
"    </method>\n"
"    <method name=\"DestroyClient\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"    </method>\n"
"    <method name=\"SendFloorRequest\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"floor_request_arg\"/>\n"
"    </method>\n"
"    <method name=\"SendFloorRelease\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"floor_request_id\"/>\n"
"    </method>\n"
"    <method name=\"SendFloorRequestQuery\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"in\" type=\"q\" name=\"floor_request_id\"/>\n"
"    </method>\n"
"    <method name=\"SendUserQuery\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"user_query_arg\"/>\n"
"    </method>\n"
"    <method name=\"SendFloorQuery\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"floor_ids\"/>\n"
"    </method>\n"
"    <method name=\"SendChairAction\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"chair_action_arg\"/>\n"
"    </method>\n"
"    <method name=\"SendHello\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"    </method>\n"
"    <method name=\"SendGoodBye\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"client_id\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    BfcpClientAdaptor(QObject *parent);
    virtual ~BfcpClientAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void CreateClient(const QByteArray &client_arg);
    void DestroyClient(int client_id);
    void SendChairAction(int client_id, const QByteArray &chair_action_arg);
    void SendFloorQuery(int client_id, const QByteArray &floor_ids);
    void SendFloorRelease(int client_id, ushort floor_request_id);
    void SendFloorRequest(int client_id, const QByteArray &floor_request_arg);
    void SendFloorRequestQuery(int client_id, ushort floor_request_id);
    void SendGoodBye(int client_id);
    void SendHello(int client_id);
    void SendUserQuery(int client_id, const QByteArray &user_query_arg);
Q_SIGNALS: // SIGNALS
    void ClientControlSignal(int control_error, int client_id, const QByteArray &client_arg);
    void ErrorReceivedSignal(int client_id, const QByteArray &data);
    void FloorRequestInfoReceivedSignal(int client_id, const QByteArray &data);
    void FloorStatusReceivedSignal(int client_id, const QByteArray &data);
    void StateChangedSignal(int client_id, int state);
    void UserStatusReceivedSignal(int client_id, const QByteArray &data);
};

#endif
