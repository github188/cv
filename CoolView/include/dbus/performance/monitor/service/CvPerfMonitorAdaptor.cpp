/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c CvPerfMonitorAdaptor -a CvPerfMonitorAdaptor.h:CvPerfMonitorAdaptor.cpp .\com.dcampus.coolview.performance.monitor.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "CvPerfMonitorAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class CvPerfMonitorAdaptor
 */

CvPerfMonitorAdaptor::CvPerfMonitorAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

CvPerfMonitorAdaptor::~CvPerfMonitorAdaptor()
{
    // destructor
}

void CvPerfMonitorAdaptor::CreateTestMedia(const QString &media_id, const QByteArray &input_garray)
{
    // handle method call com.dcampus.coolview.performance.monitor.CreateTestMedia
    QMetaObject::invokeMethod(parent(), "CreateTestMedia", Q_ARG(QString, media_id), Q_ARG(QByteArray, input_garray));
}

void CvPerfMonitorAdaptor::HelloInfo(int processID, const QByteArray &processImage)
{
    // handle method call com.dcampus.coolview.performance.monitor.HelloInfo
    QMetaObject::invokeMethod(parent(), "HelloInfo", Q_ARG(int, processID), Q_ARG(QByteArray, processImage));
}

void CvPerfMonitorAdaptor::RegisterMediaProcess(const QByteArray &processInfo)
{
    // handle method call com.dcampus.coolview.performance.monitor.RegisterMediaProcess
    QMetaObject::invokeMethod(parent(), "RegisterMediaProcess", Q_ARG(QByteArray, processInfo));
}

void CvPerfMonitorAdaptor::RegisterProcess(const QByteArray &processInfo)
{
    // handle method call com.dcampus.coolview.performance.monitor.RegisterProcess
    QMetaObject::invokeMethod(parent(), "RegisterProcess", Q_ARG(QByteArray, processInfo));
}

void CvPerfMonitorAdaptor::ReleaseTestMedia(const QString &media_id)
{
    // handle method call com.dcampus.coolview.performance.monitor.ReleaseTestMedia
    QMetaObject::invokeMethod(parent(), "ReleaseTestMedia", Q_ARG(QString, media_id));
}

void CvPerfMonitorAdaptor::UnregisterMediaProcess(int processID)
{
    // handle method call com.dcampus.coolview.performance.monitor.UnregisterMediaProcess
    QMetaObject::invokeMethod(parent(), "UnregisterMediaProcess", Q_ARG(int, processID));
}

void CvPerfMonitorAdaptor::UnregisterProcess(int processID)
{
    // handle method call com.dcampus.coolview.performance.monitor.UnregisterProcess
    QMetaObject::invokeMethod(parent(), "UnregisterProcess", Q_ARG(int, processID));
}

